  <div class="proposition-container">
    <header class="proposition-header">
      <h1 class="proposition-title"><%= proposition.objet %></h1>
    </header>

    <section class="proposition-info">
      <div class="info-item">
        <h2 class="info-subtitle">Description de la Situation Actuelle</h2>
        <p class="info-text"><%= proposition.description_situation_actuelle %></p>
      </div>
      <div class="info-item">
        <h2 class="info-subtitle">Description de l'Am√©lioration Propos√©e</h2>
        <p class="info-text"><%= proposition.description_amelioration_proposee %></p>
      </div>
    </section>

    <section class="proposition-status">
      <h2 class="status-title">Statut</h2>
      <div class="status <%= proposition.statut %>">
        <%= proposition.statut === 'soldee' ? 'Sold√©e' : proposition.statut === 'en cours' ? 'En Cours' : proposition.statut === 'anulee' ? 'Annul√©e' : 'Non Sold√©e' %>
      </div>
    </section>

    <section class="proposition-impacts">
      <h2 class="impacts-title">Impacts</h2>
      <ul>
        <% if (proposition.impact_economique) { %>
        <li class="impact-item">üí° Impact √©conomique</li>
        <% } %>
        <% if (proposition.impact_technique) { %>
        <li class="impact-item">üîß Impact technique</li>
        <% } %>
        <% if (proposition.impact_formation) { %>
        <li class="impact-item">üìö Impact de formation</li>
        <% } %>
        <% if (proposition.impact_fonctionnement) { %>
        <li class="impact-item">‚öôÔ∏è Impact de fonctionnement</li>
        <% } %>
      </ul>
    </section>
    <section class="proposition-images"></section>
    <h2 class="images-title">Images Avant
    </h2>
    <div class="image-gallery" data-type="before">
    </div>

    <h2 class="images-title">Images Apr√®s</h2>
    <div class="image-gallery" data-type="after">
    </div>
    </section>
    <div class="grading-section">
      <h2>√âvaluez cette proposition</h2>
      <form id="gradeForm" action="/voting-sessions/proposition/<%= proposition.id %>/vote" method="POST" class="grade-form">
        <div class="radio-group">
          <% for (let i = 1; i <= 6; i++) { %>
          <label class="grade-label">
            <input type="radio" name="grade" value="<%= i %>" <%= userVote == i ? 'checked' : '' %> required>
            <span class="custom-radio"><%= i %></span>
          </label>
          <% } %>
        </div>
        <button type="submit" class="submit-button">Soumettre</button>
      </form>
    </div>
    <div id="imageModal" class="modal">
      <span class="modal-close" onclick="closeModal()">&times;</span>
      <img class="modal-content" id="modalImage">
      <a id="downloadLink" class="btn-download" download>T√©l√©charger</a>
    </div>
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const propositionId = '<%= proposition.id %>';
        const submitButton = document.querySelector(".submit-button");

        function checkPropositionStatus() {
          fetch(`/voting-sessions/proposition-status/${propositionId}`)
            .then(response => response.json())
            .then(data => {
              if (data.error) {
                console.error('Erreur lors de la r√©cup√©ration du statut de la proposition:', data.error);
                return;
              }

              if (!data.is_current) {
                location.reload();
                XMLDocument
                return;
              }

              if (data.is_voted) {
                const voteInputs = document.querySelectorAll('.grade-form input[type="radio"]');
                const isAlreadyDisabled = Array.from(voteInputs).some(input => input.disabled);
                submitButton.remove();
                if (!isAlreadyDisabled) {
                  voteInputs.forEach(input => input.disabled = true);
                  console.log();
                  
                  Swal.fire({
                    icon: data.average_grade >= 3 ? 'success' : 'warning',
                    title: 'Vote Termin√©',
                    html: `
                  <h3>Note moyenne: <strong>${data.average_grade.toFixed(2)}</strong></h3>
                  <h3>Statut: <strong>${data.average_grade >= 3 ? 'Retenu' : 'Non Retenu'}</strong></h3>
                  `,
                    confirmButtonText: 'OK'
                  });
                }
              }
            })
            .catch(error => {
              console.error('Erreur lors de la r√©cup√©ration de l\'√©tat de la proposition:', error);
            });
        }
        checkPropositionStatus()
        const statusCheckInterval = setInterval(checkPropositionStatus, 3000);

        document.getElementById('gradeForm').onsubmit = function(event) {
          event.preventDefault();

          const formData = new FormData(this);
          fetch(this.action, {
              method: this.method,
              body: formData,
            })
            .then(response => response.json())
            .then(data => {
              if (data.error) {
                Swal.fire({
                  icon: 'error',
                  title: 'Erreur',
                  text: data.error,
                });
              } else {
                Swal.fire({
                  icon: 'success',
                  title: 'Succ√®s',
                  text: 'Votre √©valuation a √©t√© soumise avec succ√®s.',
                })
              }
            })
            .catch(error => {
              console.error('Erreur lors de l\'envoi de la note:', error);
              Swal.fire({
                icon: 'error',
                title: 'Erreur',
                text: 'Une erreur est survenue. Veuillez r√©essayer.',
              });
            });
        };

        function refreshGallery(type) {
          const propositionId = '<%= proposition.id %>';

          fetch(`/images/proposition/${propositionId}?type=${type}`)
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                const galleryContainer = document.querySelector(`.image-gallery[data-type="${type}"]`);
                if (data.images.length > 0) {
                  galleryContainer.innerHTML = data.images.map(image => `
    <div class="image-wrapper" onclick="openModal('/images/${propositionId}/${type}/${image.filename}')">
      <img src="/images/${propositionId}/${type}/${image.filename}" alt="Image ${type === 'before' ? 'Avant' : 'Apr√®s'}" class="image-thumbnail">
    </div>
    `).join('');
                } else {
                  galleryContainer.innerHTML = `<p class="no-images-message">Aucune image "${type === 'before' ? 'Avant' : 'Apr√®s'}" disponible.</p>`;
                }
              } else {
                console.error('Error fetching images:', data.message);
              }
            })
            .catch(error => {
              console.error('Error updating image gallery:', error);
            });
        }
        refreshGallery('before');
        refreshGallery('after');
      });
    </script>