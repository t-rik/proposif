<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Mes Propositions</title>

  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ag-grid-community/styles/ag-grid.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ag-grid-community/styles/ag-theme-alpine.css">

  <style>
    body {
      font-family: 'Roboto', sans-serif;
      background-color: #f8f9fa;
      color: #333;
      margin: 0;
      padding: 0;
      overflow-x: hidden;
    }

    h1 {
      text-align: center;
      color: #003366;
      margin: 20px 0;
      font-size: 2.5rem;
      font-weight: 700;
      letter-spacing: 1px;
    }

    .content-container {
      width: 95%;
      max-width: 1800px;
      margin: 0 auto;
      padding: 0;
      box-sizing: border-box;
    }

    #myGrid {
      width: 100%;
      min-height: 600px;
      border-radius: 10px;
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
      overflow: hidden;
      background-color: #ffffff;
      margin-top: 20px;
    }

    .ag-theme-alpine {
      --ag-header-foreground-color: white;
      --ag-header-background-color: #004d99;
      --ag-header-cell-hover-background-color: #003366;
      --ag-row-hover-color: #e0f7ff;
      --ag-border-color: #dddddd;
    }

    .ag-theme-alpine .ag-header-cell-label {
      font-weight: 500;
      font-size: 0.95rem;
      text-transform: uppercase;
    }

    .ag-theme-alpine .ag-input-field-input {
      color: #333 !important;
    }

    .ag-theme-alpine .ag-header-cell-filter-icon {
      font-size: 1rem;
      color: #004d99;
    }

    .ag-theme-alpine .ag-icon {
      color: #004d99;
    }

    .ag-theme-alpine .ag-header-icon {
      filter: none;
    }

    .ag-theme-alpine .ag-filter-tool-panel .ag-icon-clear {
      font-size: 0.9rem;
      color: #004d99;
    }

    .ag-theme-alpine .ag-header-cell .ag-icon {
      filter: brightness(1.2);
    }

    .ag-floating-filter-button {
      display: none !important;
    }

    .modal {
      display: none;
      position: fixed;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0, 0, 0, 0.75);
      justify-content: center;
      align-items: center;
      z-index: 1000;
      padding: 20px;
    }

    .modal-content {
      background-color: #fff;
      padding: 30px;
      border: none;
      width: 90%;
      max-width: 800px;
      max-height: 85vh;
      overflow-y: auto;
      border-radius: 12px;
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
      position: relative;
      z-index: 1010;
    }

    .close {
      color: #555;
      position: absolute;
      top: 15px;
      right: 20px;
      font-size: 24px;
      font-weight: bold;
      cursor: pointer;
      transition: color 0.3s ease;
    }

    .close:hover,
    .close:focus {
      color: #000;
      text-decoration: none;
    }

    .button {
      padding: 8px 16px;
      background-color: #004d99;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-weight: 500;
      font-size: 0.875rem;
      /* Slightly smaller font size */
      transition: background-color 0.3s ease;
    }

    .button:hover {
      background-color: #003366;
    }

    .button.secondary {
      background-color: #004d99;
    }

    .button.secondary:hover {
      background-color: #003366;
    }
  </style>
</head>

<body>
  <div class="content-container">
    <h1>Propositions</h1>

    <div id="myGrid" class="ag-theme-alpine"></div>

    <div id="dataContainer" data-row-data='<%= JSON.stringify(propositions).replace(/'/g, "&#39;") %>' style="display: none;"></div>

    <div id="myModal" class="modal">
      <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Détails de la Proposition</h2>
        <div id="rowDetails"></div>
        <button class="button" id="viewDetailsButton">Voir les détails</button>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/ag-grid-community/dist/ag-grid-community.noStyle.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const columnDefs = [{
          headerName: "ID",
          field: "id",
          sortable: true,
          filter: true,
          resizable: true,
          flex: 1,
          sort: 'desc'
        },
        {
          headerName: "Objet",
          field: "objet",
          sortable: true,
          filter: true,
          resizable: true,
          flex: 2
        },
        {
          headerName: "Situation Actuelle",
          field: "description_situation_actuelle",
          sortable: true,
          filter: true,
          resizable: true,
          flex: 3
        },
        {
          headerName: "Amélioration Proposée",
          field: "description_amelioration_proposee",
          sortable: true,
          filter: true,
          resizable: true,
          flex: 3
        },
        {
          headerName: "Date",
          field: "date_emission",
          sortable: true,
          flex: 1.5,
          valueFormatter: params => params.value ? new Date(params.value).toLocaleDateString('fr-FR') : ''
        },
        {
          headerName: "Actions",
          cellRenderer: 'buttonRenderer',
          maxWidth: 150
        }
      ];

      const dataContainer = document.getElementById('dataContainer');
      const rowData = JSON.parse(dataContainer.getAttribute('data-row-data'));

      const buttonRenderer = (params) => {
        const button = document.createElement('button');
        button.innerText = 'Détails';
        button.className = 'button secondary';
        button.onclick = (event) => {
          event.stopPropagation();
          window.location.href = `/propositions/proposition/${params.data.id}`;
        };
        return button;
      };

      const gridOptions = {
        columnDefs: columnDefs,
        rowData: rowData,
        defaultColDef: {
          sortable: true,
          filter: true,
          floatingFilter: true,
          resizable: true,
        },
        pagination: true,
        paginationPageSize: 50,
        domLayout: 'autoHeight',
        suppressRowClickSelection: true,
        components: {
          buttonRenderer: buttonRenderer
        },
        onRowClicked: params => {
          showRowDetails(params.data);
        },
        onGridReady: params => {
          params.api.refreshCells({
            force: true
          });
        }
      };

      const eGridDiv = document.querySelector('#myGrid');
      agGrid.createGrid(eGridDiv, gridOptions);

      const modal = document.getElementById('myModal');
      const closeButton = document.querySelector('.close');
      const rowDetails = document.getElementById('rowDetails');
      const viewDetailsButton = document.getElementById('viewDetailsButton');

      function escapeHtml(text) {
        return text.replace(/[&<>"']/g, match => {
          const map = {
            '&': '&amp;',
            '<': '&lt;',
            '>': '&gt;',
            '"': '&quot;',
            "'": '&#039;'
          };
          return map[match];
        });
      }

      function showRowDetails(data) {
        rowDetails.innerHTML = `
          <p><strong>ID:</strong> ${data.id}</p>
          <p><strong>Objet:</strong> ${data.objet}</p>
          <p><strong>Situation Actuelle:</strong> ${escapeHtml(data.description_situation_actuelle)}</p>
          <p><strong>Amélioration Proposée:</strong> ${escapeHtml(data.description_amelioration_proposee)}</p>
          <p><strong>Date:</strong> ${new Date(data.date_emission).toLocaleDateString('fr-FR')}</p>
        `;
        modal.style.display = 'flex';

        viewDetailsButton.onclick = () => {
          window.location.href = `/propositions/proposition/${data.id}`;
        };
      }

      closeButton.onclick = () => {
        modal.style.display = 'none';
      };

      window.onclick = event => {
        if (event.target === modal) {
          modal.style.display = 'none';
        }
      };
    });
  </script>
</body>

</html>